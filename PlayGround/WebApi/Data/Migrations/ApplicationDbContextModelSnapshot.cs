// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data;

#nullable disable

namespace WebApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("EntityFrameWork.Database.Entity.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacture")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id")
                        .HasName("PK_Products");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("ProductProviders", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProviderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId", "ProviderId")
                        .HasName("PK_Product_Provider");

                    b.HasIndex("ProviderId");

                    b.ToTable("ProductProviders");
                });

            modelBuilder.Entity("WebApi.Database.Entity.ProductDetailEntity", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId")
                        .HasName("PK_ProductDetails");

                    b.ToTable("ProductDetails", (string)null);
                });

            modelBuilder.Entity("WebApi.Database.Entity.ProviderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_Providers");

                    b.ToTable("Providers", (string)null);
                });

            modelBuilder.Entity("ProductProviders", b =>
                {
                    b.HasOne("EntityFrameWork.Database.Entity.ProductEntity", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_ProductId");

                    b.HasOne("WebApi.Database.Entity.ProviderEntity", null)
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Provider_ProviderId");
                });

            modelBuilder.Entity("WebApi.Database.Entity.ProductDetailEntity", b =>
                {
                    b.HasOne("EntityFrameWork.Database.Entity.ProductEntity", "Product")
                        .WithOne("ProductDetail")
                        .HasForeignKey("WebApi.Database.Entity.ProductDetailEntity", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EntityFrameWork.Database.Entity.ProductEntity", b =>
                {
                    b.Navigation("ProductDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
